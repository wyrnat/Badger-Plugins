import time
import numpy as np
from badger import environment
from badger.interface import Interface


class Environment(environment.Environment):

    name = 'xfelsim_sase2'

    def __init__(self, interface: Interface, params):
        super().__init__(interface, params)

    limits_undulators = {
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL3.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL3.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL4.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL4.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL5.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL5.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL6.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL6.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL7.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL7.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL8.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL8.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL10.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL10.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL11.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL11.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL12.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL12.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL13.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL13.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL14.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL14.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL15.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL15.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL16.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL16.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL17.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL17.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL19.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL19.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL20.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL20.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL21.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL21.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL22.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL22.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL23.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL23.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL24.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL24.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL25.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL25.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL26.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL26.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL27.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL27.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL28.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL28.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL29.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL29.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL30.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL30.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL31.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL31.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL32.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL32.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL33.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL33.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL34.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL34.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL35.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL35.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL36.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL36.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL37.SA2/FIELD.OFFSET": [-0.5, 0.5],
            "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL37.SA2/FIELD.OFFSET": [-0.5, 0.5]
            }

    def _get_vrange(self, var):
        return self.limits_undulators[var]

    @staticmethod
    def list_vars():
        return ["XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL3.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL3.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL4.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL4.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL5.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL5.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL6.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL6.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL7.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL7.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL8.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL8.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL10.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL10.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL11.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL11.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL12.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL12.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL13.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL13.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL14.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL14.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL15.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL15.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL16.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL16.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL17.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL17.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL19.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL19.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL20.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL20.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL21.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL21.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL22.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL22.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL23.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL23.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL24.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL24.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL25.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL25.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL26.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL26.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL27.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL27.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL28.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL28.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL29.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL29.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL30.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL30.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL31.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL31.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL32.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL32.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL33.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL33.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL34.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL34.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL35.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL35.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL36.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL36.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAX.CELL37.SA2/FIELD.OFFSET",
                "XFEL_SIM.FEL/UNDULATOR.SASE2/CAY.CELL37.SA2/FIELD.OFFSET"
                ]
    # TODO: add losses
    @staticmethod
    def list_obses():
        return ['sases_average']

    @staticmethod
    def get_default_params():
        return {
            'waiting_time': 1,
        }

    def _get_var(self, var):
        # TODO: update pv limits every time?
        return self.interface.get_value(var)

    def _set_var(self, var, x):
        self.interface.set_value(var, x)

    def _get_obs(self, obs):
        try:
            dt = self.params['waiting_time']
        except KeyError:
            dt = 0
        time.sleep(dt)

        if obs == 'sases_average':
            values = []
            for i in range(30):
                sa1 = self.interface.get_value("XFEL_SIM.FEL/XGM/XGM.2595.T6/INTENSITY.RAW.TRAIN")
                values.append(sa1)
                time.sleep(0.1)
            return np.mean(values)



    def read_bpms(self, bpms, nreadings):
        orbits = np.zeros((nreadings, len(bpms)))
        for i in range(nreadings):
            for j, bpm in enumerate(bpms):
                orbits[i, j] = self.interface.get_value(bpm)
            time.sleep(0.1)
        return np.mean(orbits, axis=0)

